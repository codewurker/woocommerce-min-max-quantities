(()=>{"use strict";const t=window.wp.blocks,e=window.React,i=window.wc.blockTemplates,n=window.wc.productEditor,o=window.wp.i18n;function a(t,e){return e>0&&(t%e!=0||0===t)}function r(t){return parseFloat(t||"0")}const u=window.wp.data,m=window.wp.coreData,s=window.wp.element;const c=JSON.parse('{"$schema":"https://schemas.wp.org/trunk/block.json","apiVersion":3,"name":"woocommerce-min-max/min-quantity-field","version":"0.1.0","title":"Minimum Quantity","category":"widgets","icon":"flag","description":"Minimum Quantity","attributes":{"label":{"type":"string","__experimentalRole":"content"}},"supports":{"html":false,"inserter":false},"textdomain":"woocommerce-min-max-quantities","editorScript":"file:./index.js","editorStyle":"file:./index.css","style":"file:./style-index.css","usesContext":["postType"]}');(0,t.registerBlockType)(c,{edit:function({attributes:t,context:{postType:c}}){const l=(0,i.useWooBlockProps)(t),{groupOf:p,isCategoryGroupOf:d}=function(t){const e="product",i=(0,m.useEntityId)("postType",e),n=i,{selectedCategories:o,groupOf:a}=(0,u.useSelect)((t=>{const{getEditedEntityRecord:i}=t("core"),{meta_data:o}=i("postType",e,n),{categories:a}=i("postType",e,n),r=o?.find((t=>"group_of_quantity"===t.key))?.value;return{groupOf:r,selectedCategories:t("core").getEntityRecords("taxonomy","product_cat",{include:a?.map((t=>t.id))})||[]}}),[n]),r=Math.min(...o.filter((t=>""!==t.meta?.group_of_quantity)).map((t=>parseFloat(t.meta?.group_of_quantity||"0")))),s=Boolean(r&&r!==1/0),c=Boolean(s&&!a);return{groupOf:a&&String(a||"")||c&&String(r)||"1",isCategoryGroupOf:c,hasCategoryGroupOf:s,categoryGroupOf:String(r)}}(),y=function(t,e,i){const[u,m]=(0,n.__experimentalUseProductEntityProp)("meta_data.maximum_allowed_quantity",{postType:t}),[c,l]=(0,n.__experimentalUseProductEntityProp)("meta_data.minimum_allowed_quantity",{postType:t}),{error:p}=(0,n.useValidation)("meta_data.minimum_allowed_quantity_on_save",(async function(){if(r(c)<0)return(0,o.sprintf)(
// translators: %d is the minimum value of the number input.
// translators: %d is the minimum value of the number input.
(0,o.__)("Value must be greater than or equal to %d","woocommerce-min-max-quantities"),0)}),[c]),{error:d,validate:y}=(0,n.useValidation)("meta_data.minimum_allowed_quantity_on_change",(async function(t,n){const m="string"==typeof n?.maximumQuantity?n.maximumQuantity:u;return function(t,e,i,n){if("min"===n?t:e)return t&&e&&r(t)>r(e)?"min"===n?(0,o.sprintf)(
// translators: %d is the value of the max quantity.
// translators: %d is the value of the max quantity.
(0,o.__)("This must be lower than or equal to %d (your max. quantity).","woocommerce-min-max-quantities"),r(e)):(0,o.sprintf)(
// translators: %d is the value of the min quantity.
// translators: %d is the value of the min quantity.
(0,o.__)("This must be higher than or equal to %d (your min. quantity).","woocommerce-min-max-quantities"),r(t)):function(t,e){if(t&&a(r(t),r(e)))return(0,o.sprintf)(
// translators: %d is the value of the groupOf quantity input.
// translators: %d is the value of the groupOf quantity input.
(0,o.__)("Please enter an integer multiple of %d","woocommerce-min-max-quantities"),e)}("min"===n?t:e,i)}("string"==typeof n?.minimumQuantity?n.minimumQuantity:c,m,e,i)}),[u,c,e]),_=function(t,e){const{update:i}=(0,n.__experimentalUseProductMetadata)(e);return(e,n,o,u)=>{const m=[];let s=e;(n&&"minimum_allowed_quantity"===u?r(s)>r(n):r(s)<r(n))?(s=n,m.push({key:u,value:n})):a(r(e),r(o))&&(s=function(t,e){const i=Math.ceil(t/e)*e,n=Math.floor(t/e)*e;return Math.abs(i-t)>Math.abs(n-t)?n:i}(r(e),r(o)).toString(),m.push({key:u,value:s})),m.length&&i(m),t({minimumQuantity:"minimum_allowed_quantity"===u?s:n,maximumQuantity:"maximum_allowed_quantity"===u?s:n})}}(y,{postType:t});return(0,s.useEffect)((()=>{y()}),[e]),{onBlur:()=>{c&&_(c,u,e,"minimum_allowed_quantity")},error:d||p,value:(f=c,f||""),onChange:t=>{l(t),y({minimumQuantity:t})},step:r(e)};var f}(c,p,"min");return(0,e.createElement)("div",{...l},(0,e.createElement)(n.__experimentalNumberControl,{...t,...y,placeholder:d?(0,o.sprintf)(
// translators: %d is the value of the category group of quantity.
// translators: %d is the value of the category group of quantity.
(0,o.__)("%d (category default)","woocommerce-min-max-quantities"),r(p)):(0,o.sprintf)(
// translators: %d is the value of the category group of quantity.
// translators: %d is the value of the category group of quantity.
(0,o.__)("%d (default)","woocommerce-min-max-quantities"),r(p)),tooltip:(0,o.__)("Enter a minimum quantity customers can buy in a single order. This is particularly useful for items sold in larger quantities, like multipacks.","woocommerce-min-max-quantities")}))}})})();